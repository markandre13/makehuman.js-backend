// This file is generated by the corba.js IDL compiler from '/Users/mark/c/mediapipe/test/makehuman.idl'.

#pragma once
#include "../src/corba/corba.hh"
#include "../src/corba/orb.hh"
#include "../src/corba/giop.hh"
#include "../src/corba/coroutine.hh"
#include <vector>
#include <map>
#include <functional>
#include "makehuman.hh"
#include "makehuman_skel.hh"
#include "makehuman_stub.hh"

static CORBA::task<> _hello(Backend *obj, CORBA::GIOPDecoder &decoder, CORBA::GIOPEncoder &encoder) {
    auto result = co_await obj->hello(decoder.string());
    encoder.string(result);
}
static CORBA::task<> _fail(Backend *obj, CORBA::GIOPDecoder &decoder, CORBA::GIOPEncoder &encoder) {
    co_await obj->fail();
}
std::map<std::string, std::function<CORBA::task<>(Backend *obj, CORBA::GIOPDecoder &decoder, CORBA::GIOPEncoder &encoder)>> _operations = {
    {"hello", _hello},
    {"fail", _fail},
};
CORBA::task<> Backend_skel::_call(const std::string &operation, CORBA::GIOPDecoder &decoder, CORBA::GIOPEncoder &encoder) {
    auto it = _operations.find(operation);
    if (it == _operations.end()) {
        throw CORBA::BAD_OPERATION(0, CORBA::YES);
    }
    co_await it->second(this, decoder, encoder);
};

